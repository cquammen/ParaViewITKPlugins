/*=========================================================================

  Program:   Visualization Toolkit
  Module:    vtkIterativeDeconvolutionImageFilter.h

  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
// .NAME vtkIterativeDeconvolutionImageFilter - peforms Gaussian blurring of an input image
// .SECTION Description
// vtkMyImageShiftFilter is a filter to generate scalar values from a
// dataset.  The scalar values lie within a user specified range, and
// are generated by computing a projection of each dataset point onto
// a line. The line can be oriented arbitrarily. A typical example is
// to generate scalars based on elevation or height above a plane.

#ifndef __vtkIterativeDeconvolutionImageFilter_h
#define __vtkIterativeDeconvolutionImageFilter_h

#include <vtkDeconvolutionImageFilter.h>

class VTK_EXPORT vtkIterativeDeconvolutionImageFilter : public vtkDeconvolutionImageFilter
{
public:

  static vtkIterativeDeconvolutionImageFilter* New();
  vtkTypeMacro(vtkIterativeDeconvolutionImageFilter, vtkDeconvolutionImageFilter);
  void PrintSelf(ostream& os, vtkIndent indent);

  //BTX
  typedef Superclass::PixelType             PixelType;
  typedef Superclass::ITKImageType          ITKImageType;
  typedef Superclass::ITKInternalFilterType ITKInternalFilterType;
  typedef Superclass::ITKImageImportType    ITKImageImportType;
  typedef Superclass::ITKImageExportType    ITKImageExportType;
  //ETX

  /**
   * Set/Get the number of iterations to run. If
   * RelativeChangeThreshold is  set to a value greater than zero,
   * then  this parameter is the maximum number of iterations which can
   * be exceeded even if the RelativeChangeThreshold has not been reached.
   * Defaults to 10.
   */
  vtkGetMacro(NumberOfIterations, int);
  vtkSetMacro(NumberOfIterations, int);

  /**
   * Set/Get the relative change threshold between two iterations to stop the iteration.
   * A value lower or equal to 0 mean that this feature is not used. A usual value is
   * between 10^-3 and 10^-5.
   * Defaults to 0 (not used).
   */
  vtkGetMacro(RelativeChangeThreshold, double);
  vtkSetMacro(RelativeChangeThreshold, double);

  /**
   * Set/Get how often a smoothing is applied with the SmoothingFilter.
   * By default, the smoothing is applied every iterations.
   */
  vtkGetMacro(SmoothingPeriod, int);
  vtkSetMacro(SmoothingPeriod, int);


protected:
  vtkIterativeDeconvolutionImageFilter();
  ~vtkIterativeDeconvolutionImageFilter();

  int    NumberOfIterations;
  double RelativeChangeThreshold;
  int    SmoothingPeriod;

private:
  vtkIterativeDeconvolutionImageFilter(const vtkIterativeDeconvolutionImageFilter&);  // Not implemented.
  void operator=(const vtkIterativeDeconvolutionImageFilter&);  // Not implemented.
};

#endif
