/*=========================================================================

  Program:   Visualization Toolkit
  Module:    vtkLandweberDeconvolutionImageFilter.h

  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
// .NAME vtkLandweberDeconvolutionImageFilter - peforms Gaussian blurring of an input image
// .SECTION Description
// vtkMyImageShiftFilter is a filter to generate scalar values from a
// dataset.  The scalar values lie within a user specified range, and
// are generated by computing a projection of each dataset point onto
// a line. The line can be oriented arbitrarily. A typical example is
// to generate scalars based on elevation or height above a plane.

#ifndef __vtkLandweberDeconvolutionImageFilter_h
#define __vtkLandweberDeconvolutionImageFilter_h

#include <vtkIterativeDeconvolutionImageFilter.h>

#include <itkLandweberDeconvolutionImageFilter.h>

class VTK_EXPORT vtkLandweberDeconvolutionImageFilter : public vtkIterativeDeconvolutionImageFilter
{
public:

  static vtkLandweberDeconvolutionImageFilter* New();
  vtkTypeMacro(vtkLandweberDeconvolutionImageFilter, vtkIterativeDeconvolutionImageFilter);
  void PrintSelf(ostream& os, vtkIndent indent);

  //BTX
  typedef Superclass::PixelType             PixelType;
  typedef Superclass::ITKImageType          ITKImageType;
  typedef Superclass::ITKInternalFilterType ITKInternalFilterType;
  typedef Superclass::ITKImageImportType    ITKImageImportType;
  typedef Superclass::ITKImageExportType    ITKImageExportType;
  typedef itk::LandweberDeconvolutionImageFilter< ITKImageType, ITKImageType, ITKImageType >
    ITKDeconvolutionFilterType;
  //ETX

protected:
  vtkLandweberDeconvolutionImageFilter();
  ~vtkLandweberDeconvolutionImageFilter();

  //BTX
  ITKDeconvolutionFilterType::Pointer ITKDeconvolutionFilter;
  //ETX

protected:
  int UpdateInternalFilters();

private:
  vtkLandweberDeconvolutionImageFilter(const vtkLandweberDeconvolutionImageFilter&);  // Not implemented.
  void operator=(const vtkLandweberDeconvolutionImageFilter&);  // Not implemented.
};

#endif
